unit untMaterias;

interface
uses
  FireDAC.Comp.Client, FireDAC.DApt;

type
  TclassCidades = class
  private
    FMAT_CODIGO: string;
    FMAT_NOME: string;
    FAREAS_ARC_CODIGO: integer;
    procedure SetAREAS_ARC_CODIGO(const Value: integer);
    procedure SetMAT_CODIGO(const Value: integer);
    procedure SetMAT_NOME(const Value: string);

  public
    property MAT_CODIGO : integer read FMAT_CODIGO write SetMAT_CODIGO;
    property MAT_NOME : string read FMAT_NOME write SetMAT_NOME;
    property AREAS_ARC_CODIGO : integer read FAREAS_ARC_CODIGO write SetAREAS_ARC_CODIGO;
 //Depois de colocar todos os campos clicke Ctrl + Shift + C

    //escrever a uses acima do type
 function ConsultarMaterias(): TFDQuery;
 function Inserir(): boolean;
 procedure Carregar();
 function Alterar() : boolean;
 function Excluir() : boolean;
  end;
implementation

{ TclassCidades }
uses untConexao;

function TclassCidades.Alterar: boolean;
var
fdquery : TFDQuery;
begin
fdquery := TFDQuery.Create(nil);
fdquery.Connection := DMConexao.FDConnection1;
fdquery.SQL.Add('UPDATE ');
fdquery.SQL.Add('CIDADES ');//TABELA QUE VAI ALTERAR
fdquery.SQL.Add('SET ');
fdquery.SQL.Add('CID_NOME = :CID_NOME, ');  //CAMPO DE ALTERAÇÃO
fdquery.SQL.Add('CID_UF = :CID_UF, ');  //CAMPO DE ALTERAÇÃO
fdquery.SQL.Add('CID_CEP = :CID_CEP, ');  //CAMPO DE ALTERAÇÃO
fdquery.SQL.Add('PAISES_PA_CODIGO = :PAISES_PA_CODIGO, ');  //CAMPO DE ALTERAÇÃO
fdquery.SQL.Add('CID_ENDERECO = :CID_ENDERECO ');  //CAMPO DE ALTERAÇÃO
//APOS O ULTIMO CAMPO NÃO VAI VIRGULA
fdquery.SQL.Add('WHERE ');
fdquery.SQL.Add('CID_CODIGO = :CID_CODIGO ');

fdquery.ParamByName('CID_CODIGO').Value := CID_CODIGO;
fdquery.ParamByName('CID_NOME').Value := CID_NOME;
fdquery.ParamByName('CID_UF').Value := CID_UF;
fdquery.ParamByName('CID_CEP').Value := CID_CEP;
fdquery.ParamByName('PAISES_PA_CODIGO').Value := PAISES_PA_CODIGO;
fdquery.ParamByName('CID_ENDERECO').Value := CID_ENDERECO;
//executa no banco de dados
fdquery.ExecSQL;
//verifica se realmente fez a alteração no banco
if fdquery.RowsAffected > 0 then
  result := True else result := false


end;

procedure TclassCidades.Carregar;
begin

end;

function TclassCidades.ConsultarMaterias: TFDQuery;
begin

end;

function TclassCidades.Excluir: boolean;
begin

end;

function TclassCidades.Inserir: boolean;
begin

end;

procedure TclassCidades.SetAREAS_ARC_CODIGO(const Value: integer);
begin
  FAREAS_ARC_CODIGO := Value;
end;

procedure TclassCidades.SetMAT_CODIGO(const Value: integer);
begin
  FMAT_CODIGO := Value;
end;

procedure TclassCidades.SetMAT_NOME(const Value: string);
begin
  FMAT_NOME := Value;
end;

end.
