unit classMatriculas;

interface

uses
  FireDAC.Comp.Client, FireDAC.DApt;

type
  TclassMatriculas = class
  private
    FANO: integer;
    FALUNOS_ALU_CODIGO: integer;
    FTURMAS_TUR_CODIGO: integer;
    FMATERIAS_MAT_CODIGO: integer;
    FMAT_DATA: tdate;
    procedure SetALUNOS_ALU_CODIGO(const Value: integer);
    procedure SetANO(const Value: integer);
    procedure SetMAT_DATA(const Value: tdate);
    procedure SetMATERIAS_MAT_CODIGO(const Value: integer);
    procedure SetTURMAS_TUR_CODIGO(const Value: integer);

  public
    property ANO : integer read FANO write SetANO;
    property ALUNOS_ALU_CODIGO : integer read FALUNOS_ALU_CODIGO write SetALUNOS_ALU_CODIGO;
    property TURMAS_TUR_CODIGO : integer read FTURMAS_TUR_CODIGO write SetTURMAS_TUR_CODIGO;
    property MATERIAS_MAT_CODIGO : integer read FMATERIAS_MAT_CODIGO write SetMATERIAS_MAT_CODIGO;
    property MAT_DATA : tdate read FMAT_DATA write SetMAT_DATA;
 //Depois de colocar todos os campos clicke Ctrl + Shift + C

    //escrever a uses acima do type
 function ConsultarMatriculas(): TFDQuery;
 function Inserir(): boolean;
 procedure Carregar();
 function Alterar() : boolean;
 function Excluir() : boolean;
  end;

implementation

{ TclassMatriculas }

uses untConexao;

function TclassMatriculas.Alterar: boolean;
var
fdquery : TFDQuery;
begin
fdquery := TFDQuery.Create(nil);
fdquery.Connection := DMConexao.FDConnection1;
fdquery.SQL.Add('UPDATE ');
fdquery.SQL.Add('MATRICULAS ');//TABELA QUE VAI ALTERAR
fdquery.SQL.Add('SET ');
fdquery.SQL.Add('MAT_DATA = :MAT_DATA ');  //CAMPO DE ALTERAÇÃO
//APOS O ULTIMO CAMPO NÃO VAI VIRGULA
fdquery.SQL.Add('WHERE ');
fdquery.SQL.Add('ANO = :ANO AND ');
fdquery.SQL.Add('ALUNOS_ALU_CODIGO = :ALUNOS_ALU_CODIGO AND ');
fdquery.SQL.Add('TURMAS_TUR_CODIGO = :TURMAS_TUR_CODIGO AND ');
fdquery.SQL.Add('MATERIAS_MAT_CODIGO = :MATERIAS_MAT_CODIGO ');

fdquery.ParamByName('ANO').Value := ANO;
fdquery.ParamByName('ALUNOS_ALU_CODIGO').Value := ALUNOS_ALU_CODIGO;
fdquery.ParamByName('TURMAS_TUR_CODIGO').Value := TURMAS_TUR_CODIGO;
fdquery.ParamByName('MATERIAS_MAT_CODIGO').Value := MATERIAS_MAT_CODIGO;
fdquery.ParamByName('MAT_DATA').Value := MAT_DATA;
//executa no banco de dados
fdquery.ExecSQL;
//verifica se realmente fez a alteração no banco
if fdquery.RowsAffected > 0 then
  result := True else result := false
end;

procedure TclassMatriculas.Carregar;
var
fdquery : TFDQuery;
begin
fdquery := TFDQuery.Create(nil);
fdquery.Connection := DMConexao.FDConnection1;
fdquery.SQL.Add('SELECT * FROM MATRICULAS ');
fdquery.SQL.Add('WHERE ANO = :ANO AND ');
fdquery.SQL.Add('ALUNOS_ALU_CODIGO = :ALUNOS_ALU_CODIGO AND ');
fdquery.SQL.Add('TURMAS_TUR_CODIGO = :TURMAS_TUR_CODIGO AND ');
fdquery.SQL.Add('MATERIAS_MAT_CODIGO = :MATERIAS_MAT_CODIGO ');

fdquery.ParamByName('ANO').Value := FANO;
fdquery.ParamByName('ALUNOS_ALU_CODIGO').Value := FALUNOS_ALU_CODIGO;
fdquery.ParamByName('TURMAS_TUR_CODIGO').Value := FTURMAS_TUR_CODIGO;
fdquery.ParamByName('MATERIAS_MAT_CODIGO').Value := FMATERIAS_MAT_CODIGO;

fdquery.Open();
FMAT_DATA := fdquery.FieldByName('MAT_DATA').Value;

end;

function TclassMatriculas.ConsultarMatriculas: TFDQuery;
var
con : TFDQuery;
begin
con := TFDQuery.Create(nil);
con.Connection := dmConexao.FDConnection1;
con.sql.Add(         'SELECT                 '+
                     'MATRICULAS.ANO,   '+
                     'ALUNOS.ALU_CODIGO,     '+
                     'TURMAS.TUR_CODIGO,      '+
                     'MATERIAS.MAT_CODIGO,    '+
                     'MATRICULAS.MAT_DATA    '+
                     'FROM MATERIAS          '+
                     'LEFT OUTER JOIN ALUNOS ON ( ALUNOS.ALUNOS_ALU_CODIGO = MATRICULAS.ALUNOS_ALU_CODIGO ) '+
                     'LEFT OUTER JOIN TURMAS ON ( TURMAS.TURMAS_TUR_CODIGO = MATRICULAS.TURMAS_TUR_CODIGO ) '+
                     'LEFT OUTER JOIN MATERIAS ON ( MATERIAS.MATERIAS_MAT_CODIGO = MATRICULAS.MATERIAS_MAT_CODIGO ) ');
con.Open();
result := con;

end;

function TclassMatriculas.Excluir: boolean;
var
fdquery : TFDQuery;
begin
fdquery := TFDQuery.Create(nil);
fdquery.Connection := DMConexao.FDConnection1;
fdquery.SQL.Add('DELETE ');
fdquery.SQL.Add('FROM ');
fdquery.SQL.Add('MATERIAS ');
fdquery.SQL.Add('WHERE');
fdquery.SQL.Add('MAT_CODIGO = :MAT_CODIGO ');

fdquery.ParamByName('MAT_CODIGO').Value := MAT_CODIGO;

fdquery.ExecSQL;

if fdquery.RowsAffected > 0 then
    result := True else result := False;

    //ASDUASIUDHASIUDH

end;

function TclassMatriculas.Inserir: boolean;
var
fdquery : TFDQuery;
begin
fdquery := TFDQuery.Create(nil);
fdquery.Connection := DMConexao.FDConnection1;
fdquery.SQL.Add('INSERT INTO ');
fdquery.SQL.Add('MATRICULAS ');//*
fdquery.SQL.Add('( ');
fdquery.SQL.Add('ANO, ');//**
fdquery.SQL.Add('ALUNOS_ALU_CODIGO, ');//**
fdquery.SQL.Add('TURMAS_TUR_CODIGO, ');//**
fdquery.SQL.Add('MATERIAS_MAT_CODIGO, ');//**
fdquery.SQL.Add('MAT_DATA ');//**
fdquery.SQL.Add(') ');
fdquery.SQL.Add('VALUES ');
fdquery.SQL.Add('( ');
fdquery.SQL.Add(':ANO, ');//**
fdquery.SQL.Add(':ALUNOS_ALU_CODIGO, ');//**
fdquery.SQL.Add(':TURMAS_TUR_CODIGO, ');//**
fdquery.SQL.Add(':MATERIAS_MAT_CODIGO, ');//**
fdquery.SQL.Add(':MAT_DATA ');//**
fdquery.SQL.Add(') ');
//atribuir os valores para os parametros da SQL
fdquery.ParamByName('ANO').Value := FANO;
fdquery.ParamByName('ALUNOS_ALU_CODIGO').Value := FALUNOS_ALU_CODIGO;
fdquery.ParamByName('TURMAS_TUR_CODIGO').Value := FTURMAS_TUR_CODIGO;
fdquery.ParamByName('MATERIAS_MAT_CODIGO').Value := FMATERIAS_MAT_CODIGO;
fdquery.ParamByName('MAT_DATA').Value := FMAT_DATA;

fdquery.ExecSQL();
if fdquery.RowsAffected > 0 then
  result := true
else
  result := false;

end;

procedure TclassMatriculas.SetALUNOS_ALU_CODIGO(const Value: integer);
begin
  FALUNOS_ALU_CODIGO := Value;
end;

procedure TclassMatriculas.SetANO(const Value: integer);
begin
  FANO := Value;
end;

procedure TclassMatriculas.SetMATERIAS_MAT_CODIGO(const Value: integer);
begin
  FMATERIAS_MAT_CODIGO := Value;
end;

procedure TclassMatriculas.SetMAT_DATA(const Value: tdate);
begin
  FMAT_DATA := Value;
end;

procedure TclassMatriculas.SetTURMAS_TUR_CODIGO(const Value: integer);
begin
  FTURMAS_TUR_CODIGO := Value;
end;

end.
