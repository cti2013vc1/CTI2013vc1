unit classColaboradores;

interface
uses
  FireDAC.Comp.Client, FireDAC.DApt, idHashMessageDigest;

type
  TclassColaboradores = class
  private
    FCOL_CODIGO: integer;
    FCOL_NOME: string;
    FCOL_SENHA: string;
    FCOL_NIVEL_ACESSO: string;
    FCOL_USUARIO: string;
    procedure SetCOL_CODIGO(const Value: integer);
    procedure SetCOL_NIVEL_ACESSO(const Value: string);
    procedure SetCOL_NOME(const Value: string);
    procedure SetCOL_SENHA(const Value: string);
    procedure SetCOL_USUARIO(const Value: string);

  public
    property COL_NOME : string read FCOL_NOME write SetCOL_NOME;
    property COL_CODIGO : integer read FCOL_CODIGO write SetCOL_CODIGO;
    property COL_SENHA : string read FCOL_SENHA write SetCOL_SENHA;
    property COL_NIVEL_ACESSO : string read FCOL_NIVEL_ACESSO write SetCOL_NIVEL_ACESSO;
    property COL_USUARIO : string read FCOL_USUARIO write SetCOL_USUARIO;



 //Depois de colocar todos os campos clicke Ctrl + Shift + C

    //escrever a uses acima do type
 function ConsultarColaboradores(): TFDQuery;
 function Inserir(): boolean;
 procedure Carregar();
 function Alterar() : boolean;
 function Excluir() : boolean;
 function ValidarLogin(login, senha : string): boolean;    //Ctrl + Shift + C


     end;
implementation

uses untConexao;

{ TclassColaboradores }


function TclassColaboradores.Alterar: boolean;
var
fdquery : TFDQuery;
begin
fdquery := TFDQuery.Create(nil);
fdquery.Connection := DMConexao.FDConnection1;
fdquery.SQL.Add('UPDATE ');
fdquery.SQL.Add('COLABORADORES ');//TABELA QUE VAI ALTERAR
fdquery.SQL.Add('SET ');
fdquery.SQL.Add('COL_NOME = :COL_NOME, ');  //CAMPO DE ALTERAÇÃO
fdquery.SQL.Add('COL_SENHA = :COL_SENHA, ');  //CAMPO DE ALTERAÇÃO
fdquery.SQL.Add('COL_NIVEL_ACESSO = :COL_NIVEL_ACESSO, ');  //CAMPO DE ALTERAÇÃO
fdquery.SQL.Add('COL_USUARIO = :COL_USUARIO ');  //CAMPO DE ALTERAÇÃO
//APOS O ULTIMO CAMPO NÃO VAI VIRGULA
fdquery.SQL.Add('WHERE ');
fdquery.SQL.Add('COL_CODIGO = :COL_CODIGO ');

fdquery.ParamByName('COL_CODIGO').Value := COL_CODIGO;
fdquery.ParamByName('COL_NOME').Value := COL_NOME;
fdquery.ParamByName('COL_SENHA').Value := COL_SENHA;
fdquery.ParamByName('COL_NIVEL_ACESSO').Value := COL_NIVEL_ACESSO;
fdquery.ParamByName('COL_USUARIO').Value := COL_USUARIO;
//executa no banco de dados
fdquery.ExecSQL;
//verifica se realmente fez a alteração no banco
if fdquery.RowsAffected > 0 then
  result := True else result := false

end;

procedure TclassColaboradores.Carregar;
var
fdquery : TFDQuery;
begin
fdquery := TFDQuery.Create(nil);
fdquery.Connection := DMConexao.FDConnection1;
fdquery.SQL.Add('SELECT * FROM COLABORADORES ');
fdquery.SQL.Add('WHERE COL_CODIGO = :COL_CODIGO ');

fdquery.ParamByName('COL_CODIGO').Value := FCOL_CODIGO;

fdquery.Open();
FCOL_NOME := fdquery.FieldByName('COL_NOME').Value;
FCOL_SENHA := fdquery.FieldByName('COL_SENHA').Value;
FCOL_NIVEL_ACESSO := fdquery.FieldByName('COL_NIVEL_ACESSO').Value;
FCOL_USUARIO := fdquery.FieldByName('COL_USUARIO').Value;

end;

function TclassColaboradores.ConsultarColaboradores: TFDQuery;
var
con : TFDQuery;
begin
con := TFDQuery.Create(nil);
con.Connection := dmConexao.FDConnection1;
con.sql.Add(         'SELECT                '+
                     'COLABORADORES.COL_CODIGO,   '+
                     'COLABORADORES.COL_NOME,     '+
                     'COLABORADORES.COL_SENHA,    '+
                     'COLABORADORES.COL_NIVEL_ACESSO, '+
                     'COLABORADORES.COL_USUARIO              '+
                     'FROM COLABORADORES       Order By COLABORADORES.COL_CODIGO   ');

con.Open();
result := con;

end;

function TclassColaboradores.Excluir: boolean;
var
fdquery : TFDQuery;
begin
fdquery := TFDQuery.Create(nil);
fdquery.Connection := DMConexao.FDConnection1;
fdquery.SQL.Add('DELETE ');
fdquery.SQL.Add('FROM ');
fdquery.SQL.Add('COLABORADORES ');
fdquery.SQL.Add('WHERE');
fdquery.SQL.Add('COL_CODIGO = :COL_CODIGO ');

fdquery.ParamByName('COL_CODIGO').Value := FCOL_CODIGO;

fdquery.ExecSQL;

if fdquery.RowsAffected > 0 then
    result := True else result := False;

end;

function TclassColaboradores.Inserir: boolean;
var
fdquery : TFDQuery;
begin
fdquery := TFDQuery.Create(nil);
fdquery.Connection := DMConexao.FDConnection1;
fdquery.SQL.Add('INSERT INTO ');
fdquery.SQL.Add('COLABORADORES ');//*
fdquery.SQL.Add('( ');
fdquery.SQL.Add('COL_CODIGO, ');//**
fdquery.SQL.Add('COL_NOME, ');//**
fdquery.SQL.Add('COL_SENHA, ');//**
fdquery.SQL.Add('COL_NIVEL_ACESSO, ');//**
fdquery.SQL.Add('COL_USUARIO ');//**
fdquery.SQL.Add(') ');
fdquery.SQL.Add('VALUES ');
fdquery.SQL.Add('( ');
fdquery.SQL.Add(':COL_CODIGO, ');//**
fdquery.SQL.Add(':COL_NOME, ');//**
fdquery.SQL.Add(':COL_SENHA, ');//**
fdquery.SQL.Add(':COL_NIVEL_ACESSO, ');//**
fdquery.SQL.Add(':COL_USUARIO ');//**
fdquery.SQL.Add(') ');
//atribuir os valores para os parametros da SQL
fdquery.ParamByName('COL_CODIGO').Value := FCOL_CODIGO;
fdquery.ParamByName('COL_NOME').Value := FCOL_NOME;
fdquery.ParamByName('COL_SENHA').Value := FCOL_SENHA;
fdquery.ParamByName('COL_NIVEL_ACESSO').Value := FCOL_NIVEL_ACESSO;
fdquery.ParamByName('COL_USUARIO').Value := FCOL_USUARIO;

fdquery.ExecSQL();
if fdquery.RowsAffected > 0 then
  result := true
else
  result := false;


end;

procedure TclassColaboradores.SetCOL_CODIGO(const Value: integer);
begin
  FCOL_CODIGO := Value;
end;

procedure TclassColaboradores.SetCOL_NIVEL_ACESSO(const Value: string);
begin
  FCOL_NIVEL_ACESSO := Value;
end;

procedure TclassColaboradores.SetCOL_NOME(const Value: string);
begin
  FCOL_NOME := Value;
end;

procedure TclassColaboradores.SetCOL_SENHA(const Value: string);
begin
  FCOL_SENHA := Value;
end;

procedure TclassColaboradores.SetCOL_USUARIO(const Value: string);
begin
  FCOL_USUARIO := Value;
end;

function TclassColaboradores.ValidarLogin(login, senha: string): boolean;
var
  fdquery : TFDquery;
begin
  fdquery:= TFDQuery.Create(nil);
  fdquery.Connection := DMConexao.FDConnection1;
  fdquery.SQL.Add('SELECT * FROM COLABORADORES ');
  fdquery.SQL.Add('WHERE COL_USUARIO = :COL_USUARIO AND COL_SENHA = :COL_SENHA ');

  //parâmetro indicado em cima na variável ValidarLogin
  fdquery.ParamByName('USU_LOGIN').Value := login;
  fdquery.ParamByName('USU_SENHA').Value := ConverteMD5(senha);
  fdquery.Open();
  if (fdquery.RecordCount > 0) then
  result := true
  else
  result := false;

end;

end.
